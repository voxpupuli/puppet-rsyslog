# Data type for Rsyslog Plain TCP input module
type Rsyslog::Inputs::Imptcp = Struct[
  {
    port                       => Optional[Stdlib::Port],
    path                       => Optional[Stdlib::Absolutepath],
    discardtruncatedmsg        => Optional[Enum['on', 'off']],
    fileowner                  => Optional[String[1]],
    fileownernum               => Optional[Integer],
    filegroup                  => Optional[String[1]],
    filegroupnum               => Optional[Integer],
    filecreatemode             => Optional[Stdlib::Filemode],
    failonchownfailure         => Optional[Enum['on', 'off']],
    unlink                     => Optional[Enum['on', 'off']],
    name                       => Optional[String[1]],
    ruleset                    => Optional[String[1]],
    maxframesize               => Optional[Integer],
    address                    => Optional[Stdlib::IP::Address::V4],
    addtlframedelimiter        => Optional[Integer],
    supportoctetcountetframing => Optional[Enum['on', 'off']],
    notifyonconnectionclose    => Optional[Enum['on', 'off']],
    notifyonconnectionopen     => Optional[Enum['on', 'off']],
    keepalive                  => Optional[Enum['on', 'off']],
    'keepalive.probes'         => Optional[Integer],
    'keepalive.interval'       => Optional[Integer],
    'keepalive.time'           => Optional[Integer],
    'ratelimit.interval'       => Optional[Integer],
    'ratelimit.burst'          => Optional[Integer],
    'compression.mode'         => Optional[Enum['none', 'single', 'stream:always']],
    flowcontrol                => Optional[Enum['on', 'off']],
    multiline                  => Optional[Enum['on', 'off']],
    'framing.delimiter.regex'  => Optional[String[1]],
    socketbacklog              => Optional[Integer],
    defaulttz                  => Optional[String[1]],
    'framingfix.cisco.asa'     => Optional[Enum['on', 'off']],
    listenportfilename         => Optional[String[1]],
  }
]
